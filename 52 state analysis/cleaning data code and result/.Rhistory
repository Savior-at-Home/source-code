library(tidyverse)
library("lubridate")
#create the first line for our final result
A_data <- read.csv("ad_viz_plotval_data.csv", stringsAsFactors = F)
library(tidyverse)
library("lubridate")
#create the first line for our final result
A_data <- read.csv("../raw_data/ad_viz_plotval_data.csv", stringsAsFactors = F)
A_data_filtered <- A_data %>% filter(Source == "AirNow") %>% select(Date, DAILY_AQI_VALUE, STATE, Site.Name)
A_data_data_spread <- A_data_filtered %>% spread(Site.Name, DAILY_AQI_VALUE)
A_data_base <- A_data_data_spread[1:37, ]
A_data_change <- A_data_data_spread[81:127,]
resulting_vec <- numeric(0)
for (i in A_data_base[, 3:ncol(A_data_base)]){
resulting_vec <- c(resulting_vec, i)
}
base <- median(resulting_vec, na.rm=T)
resulting_vec <- numeric(0)
for (i in A_data_change[, 3:ncol(A_data_base)]){
resulting_vec <- c(resulting_vec, i)
}
change <- median(resulting_vec, na.rm=T)
percentage_change <- (change-base)/base
final<-data.frame(state="Alabama", baseline = base, change = change, percent = percentage_change)
final
for (i in 1:50){
# set the file name to be read in to run the loop
file_name <- paste("../raw_data/ad_viz_plotval_data (" , toString(i) , ").csv", sep="")
A_data <- read.csv(file_name, stringsAsFactors = F)
A_data$Date <- as.Date(A_data$Date, "%m/%d/%Y")
#check whether AQS or AirNow contain all the base data and change data that we need
A_filter1 <- A_data %>% filter(Date <= as.Date("2020-02-06"))
A_filter2 <- A_data %>% filter(Date >= as.Date("2020-03-21"))
A_checkpoint1_airnow <- sum(A_filter1$Source == "AirNow")==0
A_checkpoint2_airnow <- sum(A_filter2$Source == "AirNow")==0
A_checkpoint1_aqs <- sum(A_filter1$Source == "AQS")==0
A_checkpoint2_aqs <- sum(A_filter2$Source == "AQS")==0
#We use the checkpoints to check whether we would filter out AirNow's data as sources or AQS
if(!A_checkpoint1_airnow & !A_checkpoint2_airnow){
A_data_filtered <- A_data %>% filter(Source == "AirNow") %>% select(Date, DAILY_AQI_VALUE, STATE, Site.Name)
}else if(!A_checkpoint1_aqs & !A_checkpoint2_aqs)
{
A_data_filtered <- A_data %>% filter(Source == "AQS") %>% select(Date, DAILY_AQI_VALUE, STATE, Site.Name)
}else if(A_checkpoint1_airnow & !A_checkpoint1_aqs & !A_checkpoint2_airnow & A_checkpoint2_aqs) #there is data as base for aqs and change for airnow
{
A_data1 <- A_data %>% filter(Source == "AQS" & Date <= as.Date("2020-02-06"))
A_data2 <- A_data %>% filter(Source == "AirNow" & Date >= as.Date("2020-03-21"))
A_data_filtered <- rbind(A_data1, A_data2)
A_data_filtered <- A_data_filtered %>% select(Date, DAILY_AQI_VALUE, STATE, Site.Name)
}else if(!A_checkpoint1_airnow & A_checkpoint1_aqs & A_checkpoint2_airnow & !A_checkpoint2_aqs) # there is data as base for airnow and change for aqs
{
A_data1 <- A_data %>% filter(Source == "AirNow" & Date <= as.Date("2020-02-06"))
A_data2 <- A_data %>% filter(Source == "AQS" & Date >= as.Date("2020-03-21"))
A_data_filtered <- rbind(A_data1, A_data2)
A_data_filtered <- A_data_filtered %>% select(Date, DAILY_AQI_VALUE, STATE, Site.Name)
}else if(length(which(A_data$Source=="AQS"))==0)
{
A_data_filtered <- A_data %>% filter(Source == "AirNow") %>% select(Date, DAILY_AQI_VALUE, STATE, Site.Name)
}else
{
A_data_filtered <- A_data %>% filter(Source == "AirNow") %>% select(Date, DAILY_AQI_VALUE, STATE, Site.Name)
}
A_data_filtered$Date <- as.Date(A_data_filtered$Date, "%m/%d/%Y")
A_data_base_data <- A_data_filtered %>% filter( Date <= as.Date("2020-02-06"))
base <- median(A_data_base_data$DAILY_AQI_VALUE, na.rm=T)
A_data_change_data <- A_data_filtered %>% filter(Date >= as.Date("2020-03-21"))
change <- median(A_data_change_data$DAILY_AQI_VALUE, na.rm=T)
percentage_change <- (change-base)/base
new<-data.frame(state=A_data_filtered[1, "STATE"], baseline = base, change = change, percent = percentage_change)
final <- rbind(final, new)
}
final
ca_mobility
library(dplyr)
world <- read.csv("./src/Global_Mobility_Report.csv")
us <- world %>% filter(country_region == "United States")
library(dplyr)
Weekdays <- rep(c("Fri", "Sat", "Sun", "Mon", "Tue", "Wed", "Thu"), 5)
ny <- read.csv("./src/NY-PM2.5.csv")
ny <- ny %>% arrange(Date) # actually contains AQI, if want to add/change later
# select only date, county, pm2.5, state (all ny)
simple_ny <- ny %>%  select(Date, COUNTY, DAILY_AQI_VALUE, STATE)
# median pm2.5 value by date
median_ny <- simple_ny %>% group_by(Date) %>% summarize(PM2.5.Median = median(DAILY_AQI_VALUE))
# dates and values that would be considered to find baseline
baseline_ny <- median_ny[3:37,]
baseline_ny <- cbind(baseline_ny, Weekdays)
# seven median values for ny
baseline_ny_median <- baseline_ny %>% group_by(Weekdays) %>% summarize(median = median(PM2.5.Median))
baseline_ny_median <- baseline_ny_median[c(3,4,2,6,7,5,1),]
# data of ny from 3.12 to 5.1
ny_after <- median_ny[81:122,]
baseline_ny_median <- rep(baseline_ny_median$median, 6)
weekdays <- rep(c("Sat", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri"), 6)
ny_after <- cbind(ny_after, baseline_ny_median)
# percent change from baseline
change_from_baseline <- ny_after %>% mutate(Change_from_Baseline = (PM2.5.Median - baseline_ny_median) / baseline_ny_median * 100)
plot(change_from_baseline$Change_from_Baseline, col = "blue")
# now mobility change
ny_mobility <- us %>% filter(sub_region_1 == "New York")
ny_mobility <- ny_mobility %>% select(sub_region_1, date, transit_stations_percent_change_from_baseline)
ny_mobility <- ny_mobility %>% group_by(date) %>% summarize(transit_stations_percent_change_from_baseline = median(transit_stations_percent_change_from_baseline, na.rm = TRUE))
# data from 3.12 to 5.1
ny_mobility <- ny_mobility[36:77,]
plot(1:42, change_from_baseline$Change_from_Baseline, col = "blue", type = "l", ylim = c(-100, 50))
points(ny_mobility$transit_stations_percent_change_from_baseline, col = "red", type = "l")
abline(h = 0, col = "gray", lty = 2)
legend("topleft", legend = c("Mobility Change", "PM2.5 change"), col = c("blue", "red"), lty = 1, cex=0.8)
ca <- read.csv("./src/CA-PM2.5.csv")
Weekdays <- rep(c("Fri", "Sat", "Sun", "Mon", "Tue", "Wed", "Thu"), 5)
ca <- ca %>% arrange(Date) # actually contains AQI, if want to add/change later
# select only date, county, pm2.5, state (all ca)
simple_ca <- ca %>%  select(Date, COUNTY, Daily.Mean.PM2.5.Concentration, STATE)
# median pm2.5 value by date
median_ca <- simple_ca %>% group_by(Date) %>% summarize(PM2.5.Median = median(Daily.Mean.PM2.5.Concentration))
# dates and values that would be considered to find baseline
baseline_ca <- median_ca[3:37,]
baseline_ca <- cbind(baseline_ca, Weekdays)
# seven median values for ca
baseline_ca_median <- baseline_ca %>% group_by(Weekdays) %>% summarize(median = median(PM2.5.Median))
baseline_ca_median <- baseline_ca_median[c(3,4,2,6,7,5,1),]
# data of ca from 3.12 to 5.1
ca_after <- median_ca[81:122,]
baseline_ca_median <- rep(baseline_ca_median$median, 6)
weekdays <- rep(c("Sat", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri"), 6)
ca_after <- cbind(ca_after, baseline_ca_median)
# percent change from baseline
change_from_baseline <- ca_after %>% mutate(Change_from_Baseline = (PM2.5.Median - baseline_ca_median) / baseline_ca_median * 100)
plot(change_from_baseline$Change_from_Baseline, col = "blue")
ca_mobility
# now mobility change
ca_mobility <- us %>% filter(sub_region_1 == "New York")
ca_mobility <- ca_mobility %>% select(sub_region_1, date, transit_stations_percent_change_from_baseline)
ca_mobility <- ca_mobility %>% group_by(date) %>% summarize(transit_stations_percent_change_from_baseline = median(transit_stations_percent_change_from_baseline, na.rm = TRUE))
# data from 3.12 to 5.1
ca_mobility <- ca_mobility[36:77,]
plot(1:42, change_from_baseline$Change_from_Baseline, col = "blue", type = "l", ylim = c(-100, 50))
points(ca_mobility$transit_stations_percent_change_from_baseline, col = "red", type = "l")
abline(h = 0, col = "gray", lty = 2)
legend("topleft", legend = c("Mobility Change", "PM2.5 change"), col = c("blue", "red"), lty = 1, cex=0.8)
plot(change_from_baseline$Change_from_Baseline ~ ca_mobility$transit_stations_percent_change_from_baseline)
abline(lm(change_from_baseline$Change_from_Baseline ~ ca_mobility$transit_stations_percent_change_from_baseline))
summary(lm(change_from_baseline$Change_from_Baseline ~ ca_mobility$transit_stations_percent_change_from_baseline))
ca_mobility
change_from_baseline
Change_from_Baseline
Change_from_Baseline
change_from_baseline
write.csv(change_from_baseline, "CA_daily_air_quality_change_from_baseline.csv")
library(dplyr)
world <- read.csv("./src/Global_Mobility_Report.csv")
us <- world %>% filter(country_region == "United States")
library(dplyr)
Weekdays <- rep(c("Fri", "Sat", "Sun", "Mon", "Tue", "Wed", "Thu"), 5)
ny <- read.csv("./src/NY-PM2.5.csv")
ny <- ny %>% arrange(Date) # actually contains AQI, if want to add/change later
# select only date, county, pm2.5, state (all ny)
simple_ny <- ny %>%  select(Date, COUNTY, DAILY_AQI_VALUE, STATE)
# median pm2.5 value by date
median_ny <- simple_ny %>% group_by(Date) %>% summarize(PM2.5.Median = median(DAILY_AQI_VALUE))
# dates and values that would be considered to find baseline
baseline_ny <- median_ny[3:37,]
baseline_ny <- cbind(baseline_ny, Weekdays)
# seven median values for ny
baseline_ny_median <- baseline_ny %>% group_by(Weekdays) %>% summarize(median = median(PM2.5.Median))
baseline_ny_median <- baseline_ny_median[c(3,4,2,6,7,5,1),]
# data of ny from 3.12 to 5.1
ny_after <- median_ny[81:122,]
baseline_ny_median <- rep(baseline_ny_median$median, 6)
weekdays <- rep(c("Sat", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri"), 6)
ny_after <- cbind(ny_after, baseline_ny_median)
# percent change from baseline
change_from_baseline <- ny_after %>% mutate(Change_from_Baseline = (PM2.5.Median - baseline_ny_median) / baseline_ny_median * 100)
plot(change_from_baseline$Change_from_Baseline, col = "blue")
# now mobility change
ny_mobility <- us %>% filter(sub_region_1 == "New York")
ny_mobility <- ny_mobility %>% select(sub_region_1, date, transit_stations_percent_change_from_baseline)
ny_mobility <- ny_mobility %>% group_by(date) %>% summarize(transit_stations_percent_change_from_baseline = median(transit_stations_percent_change_from_baseline, na.rm = TRUE))
# data from 3.12 to 5.1
ny_mobility <- ny_mobility[36:77,]
plot(1:42, change_from_baseline$Change_from_Baseline, col = "blue", type = "l", ylim = c(-100, 50))
points(ny_mobility$transit_stations_percent_change_from_baseline, col = "red", type = "l")
abline(h = 0, col = "gray", lty = 2)
legend("topleft", legend = c("Mobility Change", "PM2.5 change"), col = c("blue", "red"), lty = 1, cex=0.8)
library(dplyr)
Weekdays <- rep(c("Fri", "Sat", "Sun", "Mon", "Tue", "Wed", "Thu"), 5)
ny <- read.csv("./src/NY-PM2.5.csv")
ny <- ny %>% arrange(Date) # actually contains AQI, if want to add/change later
# select only date, county, pm2.5, state (all ny)
simple_ny <- ny %>%  select(Date, COUNTY, DAILY_AQI_VALUE, STATE)
# median pm2.5 value by date
median_ny <- simple_ny %>% group_by(Date) %>% summarize(PM2.5.Median = median(DAILY_AQI_VALUE))
# dates and values that would be considered to find baseline
baseline_ny <- median_ny[3:37,]
baseline_ny <- cbind(baseline_ny, Weekdays)
# seven median values for ny
baseline_ny_median <- baseline_ny %>% group_by(Weekdays) %>% summarize(median = median(PM2.5.Median))
baseline_ny_median <- baseline_ny_median[c(3,4,2,6,7,5,1),]
# data of ny from 3.12 to 5.1
ny_after <- median_ny[81:122,]
baseline_ny_median <- rep(baseline_ny_median$median, 6)
weekdays <- rep(c("Sat", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri"), 6)
ny_after <- cbind(ny_after, baseline_ny_median)
# percent change from baseline
change_from_baseline <- ny_after %>% mutate(Change_from_Baseline = (PM2.5.Median - baseline_ny_median) / baseline_ny_median * 100)
plot(change_from_baseline$Change_from_Baseline, col = "blue")
change_from_baseline
change_from_baseline
library(dplyr)
world <- read.csv("./src/Global_Mobility_Report.csv")
us <- world %>% filter(country_region == "United States")
library(dplyr)
Weekdays <- rep(c("Fri", "Sat", "Sun", "Mon", "Tue", "Wed", "Thu"), 5)
ny <- read.csv("./src/NY-PM2.5.csv")
ny <- ny %>% arrange(Date) # actually contains AQI, if want to add/change later
# select only date, county, pm2.5, state (all ny)
simple_ny <- ny %>%  select(Date, COUNTY, DAILY_AQI_VALUE, STATE)
# median pm2.5 value by date
median_ny <- simple_ny %>% group_by(Date) %>% summarize(PM2.5.Median = median(DAILY_AQI_VALUE))
# dates and values that would be considered to find baseline
baseline_ny <- median_ny[3:37,]
baseline_ny <- cbind(baseline_ny, Weekdays)
# seven median values for ny
baseline_ny_median <- baseline_ny %>% group_by(Weekdays) %>% summarize(median = median(PM2.5.Median))
baseline_ny_median <- baseline_ny_median[c(3,4,2,6,7,5,1),]
# data of ny from 3.12 to 5.1
ny_after <- median_ny[81:122,]
baseline_ny_median <- rep(baseline_ny_median$median, 6)
weekdays <- rep(c("Sat", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri"), 6)
ny_after <- cbind(ny_after, baseline_ny_median)
# percent change from baseline
change_from_baseline <- ny_after %>% mutate(Change_from_Baseline = (PM2.5.Median - baseline_ny_median) / baseline_ny_median * 100)
plot(change_from_baseline$Change_from_Baseline, col = "blue")
# now mobility change
ny_mobility <- us %>% filter(sub_region_1 == "New York")
ny_mobility <- ny_mobility %>% select(sub_region_1, date, transit_stations_percent_change_from_baseline)
ny_mobility <- ny_mobility %>% group_by(date) %>% summarize(transit_stations_percent_change_from_baseline = median(transit_stations_percent_change_from_baseline, na.rm = TRUE))
# data from 3.12 to 5.1
ny_mobility <- ny_mobility[36:77,]
plot(1:42, change_from_baseline$Change_from_Baseline, col = "blue", type = "l", ylim = c(-100, 50))
points(ny_mobility$transit_stations_percent_change_from_baseline, col = "red", type = "l")
abline(h = 0, col = "gray", lty = 2)
legend("topleft", legend = c("Mobility Change", "PM2.5 change"), col = c("blue", "red"), lty = 1, cex=0.8)
change_from_baseline
write.csv(change_from_baseline, "NY_daily_air_quality_change_from_baseline.csv")
ca <- read.csv("./src/CA-PM2.5.csv")
Weekdays <- rep(c("Fri", "Sat", "Sun", "Mon", "Tue", "Wed", "Thu"), 5)
ca <- ca %>% arrange(Date) # actually contains AQI, if want to add/change later
# select only date, county, pm2.5, state (all ca)
simple_ca <- ca %>%  select(Date, COUNTY, Daily.Mean.PM2.5.Concentration, STATE)
# median pm2.5 value by date
median_ca <- simple_ca %>% group_by(Date) %>% summarize(PM2.5.Median = median(Daily.Mean.PM2.5.Concentration))
# dates and values that would be considered to find baseline
baseline_ca <- median_ca[3:37,]
baseline_ca <- cbind(baseline_ca, Weekdays)
# seven median values for ca
baseline_ca_median <- baseline_ca %>% group_by(Weekdays) %>% summarize(median = median(PM2.5.Median))
baseline_ca_median <- baseline_ca_median[c(3,4,2,6,7,5,1),]
# data of ca from 3.12 to 5.1
ca_after <- median_ca[81:122,]
baseline_ca_median <- rep(baseline_ca_median$median, 6)
weekdays <- rep(c("Sat", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri"), 6)
ca_after <- cbind(ca_after, baseline_ca_median)
# percent change from baseline
change_from_baseline <- ca_after %>% mutate(Change_from_Baseline = (PM2.5.Median - baseline_ca_median) / baseline_ca_median * 100)
plot(change_from_baseline$Change_from_Baseline, col = "blue")
# now mobility change
ca_mobility <- us %>% filter(sub_region_1 == "New York")
ca_mobility <- ca_mobility %>% select(sub_region_1, date, transit_stations_percent_change_from_baseline)
ca_mobility <- ca_mobility %>% group_by(date) %>% summarize(transit_stations_percent_change_from_baseline = median(transit_stations_percent_change_from_baseline, na.rm = TRUE))
# data from 3.12 to 5.1
ca_mobility <- ca_mobility[36:77,]
plot(1:42, change_from_baseline$Change_from_Baseline, col = "blue", type = "l", ylim = c(-100, 50))
points(ca_mobility$transit_stations_percent_change_from_baseline, col = "red", type = "l")
abline(h = 0, col = "gray", lty = 2)
legend("topleft", legend = c("Mobility Change", "PM2.5 change"), col = c("blue", "red"), lty = 1, cex=0.8)
plot(change_from_baseline$Change_from_Baseline ~ ca_mobility$transit_stations_percent_change_from_baseline)
abline(lm(change_from_baseline$Change_from_Baseline ~ ca_mobility$transit_stations_percent_change_from_baseline))
summary(lm(change_from_baseline$Change_from_Baseline ~ ca_mobility$transit_stations_percent_change_from_baseline))
change_from_baseline
